{#
/**
 * @file
 * Bartik's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}

{{ attach_library('sah/assignment-node') }}

{% if is_admin %}
  {%
    set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
  %}
  {{ attach_library('bartik/classy.node') }}
  <article{{ attributes.addClass(classes) }}>
    <header>
      {{ title_prefix }}
      {% if label and not page %}
        <h2{{ title_attributes.addClass('node__title') }}>
          <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        </h2>
      {% endif %}
      {{ title_suffix }}
      {% if display_submitted %}
        <div class="node__meta">
          {{ author_picture }}
          <span{{ author_attributes }}>
          {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        </span>
          {{ metadata }}
        </div>
      {% endif %}
    </header>
    <div{{ content_attributes.addClass('node__content', 'clearfix') }}>
      {{ content }}
    </div>
  </article>
{% else %}
  <div class="section-top-border">
    <table class="table-bordered assignment-details">
      <tbody>
      <tr>
        <th>Order ID</th>
        <th>Title</th>
      </tr>
      <tr>
        <td>{{ "%06d"|format(node.field_as_serial.value) }}</td>
        <td>{{ node.title.value }}</td>
      </tr>
      <tr>
        <th>Assignment Topic</th>
        <th>Assignment Field</th>
      </tr>
      <tr>
        <td>{{ content.field_as_topic[0]['#title'] }}</td>
        <td>{{ content.field_as_field[0]['#title'] }}</td>
      </tr>
      <tr>
        <th>Reference Style</th>
        <th>Number of References</th>
      </tr>
      <tr>
        <td>{{ content.field_as_reference_style[0]['#title'] }}</td>
        <td>{{ node.field_as_reference_count.value }}</td>
      </tr>
      <tr>
        <th>University Country</th>
        <th>Words</th>
      </tr>
      <tr>
        <td>{{ content.field_as_university_country[0]|escape }}</td>
        <td>{{ node.field_as_words.value }}</td>
      </tr>
      <tr>
        <th colspan="2">Assignment Description</th>
      </tr>
      <tr>
        <td colspan="2">
          <p class="desc">
            {{ node.field_as_description.value }}
          </p>
        </td>
      </tr>
      <tr>
        <th>Delivery Date</th>
        <th>Delivery Time</th>
      </tr>
      <tr>
        <td>{{ node.field_as_expected_delivery.0.value|date("d-M-Y") }}</td>
        <td>{{ node.field_as_expected_delivery.0.value|date("H:i") }}</td>
      </tr>
      <tr>
        <th colspan="2">Attached Files</th>
      </tr>
      <tr>
        <td colspan="2">
          {% if content.field_as_attachment[0] %}
            <ul>
              {% for key, item in node.field_as_attachment if key|first != '#' %}
                <li><a href="{{ file_url(item.entity.uri.value) }}" download><i class="fa fa-paperclip" aria-hidden="true"></i> {{ item.entity.filename.value }}</a></li>
              {% endfor %}
            </ul>
          {% endif %}
        </td>
      </tr>
      </tbody>
    </table>

    <div class="container-fluid bottom-section">
      <div class="row">
        <div class="col-sm-6">
          <h2 class="orange-heads">Final Status:</h2>
          <h1 class="blue-heads">{{ node.field_as_admin_assignment_status.value }}</h1>
        </div>
        <div class="col-sm-6">
          <h1 class="orange-heads">{{ node.field_as_expected_delivery.0.value|date("d-M-Y") }}</h1>
          <h2 class="blue-heads">{{ node.field_as_expected_delivery.0.value|date("H:i") }}</h2>
        </div>
      </div>
      <div class="row">
        <div class="col-sm-6">
          {% set total_words = node.field_as_admin_write_up_words.value + node.field_as_admin_practical_words.value %}
          <h1 class="orange-heads">{{ total_words }} words</h1>
          <h4 class="blue-heads">Write-up: {{ node.field_as_admin_write_up_words.value }} words</h4>
          <h4 class="blue-heads">Practical: {{ node.field_as_admin_practical_words.value }} words</h4>
        </div>
        <div class="col-sm-6">
          <h1 class="orange-heads">Solutions :</h1>
          {% if node.field_as_admin_solutions|length > 0 %}
            <ul class="blue-heads">
              {% for key, item in node.field_as_admin_solutions if key|first != '#' %}
                <li><a href="{{ file_url(item.entity.uri.value) }}" download><i class="fa fa-paperclip" aria-hidden="true"></i> {{ item.entity.filename.value }}</a></li>
              {% endfor %}
            </ul>
          {% else %}
            <p>No solutions uploaded till now.</p>
          {% endif %}
          {% set roles = user.getroles(TRUE) %}
          {% if 'administrator' in roles or 'manager' in roles %}
            <a class="genric-btn primary" href="/node/{{ node.id() }}/edit/">Upload Solutions</a>
          {% endif %}
        </div>
      </div>
    </div>

    {{ content.field_as_comment }}
  </div>
{% endif %}

